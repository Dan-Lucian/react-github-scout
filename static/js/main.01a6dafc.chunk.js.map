{"version":3,"sources":["SearchBar.js","Header.js","Body.js","App.js","index.js"],"names":["SearchBar","onSubmit","e","src","alt","type","name","className","value","Header","onClick","theme","Body","time","userData","avatarUrl","avatar_url","login","followers","following","profileUrl","html_url","company","blog","location","bio","repos","public_repos","twitterUsername","twitter_username","createdAt","created_at","href","console","log","App","useState","setUserData","setTheme","currentTheme","preventDefault","userName","target","username","fetch","then","response","json","data","catch","err","message","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01a6dafc.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst SearchBar = ({ onSubmit }) => {\r\n  const handleSubmit = (e) => {\r\n    onSubmit(e);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <img src=\"./img/icon-search.svg\" alt=\"Search icon\" />\r\n      <input type=\"text\" name=\"username\" />\r\n      <input\r\n        className=\"btn btn-submit\"\r\n        type=\"submit\"\r\n        name=\"btnSubmit\"\r\n        value=\"Search\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default SearchBar;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Header = ({ onClick, theme }) => {\r\n  const handleClick = () => {\r\n    onClick();\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>Github Scout</h1>\r\n      <button className=\"btn btn-theme\" type=\"button\" onClick={handleClick}>\r\n        <div className={`theme-icon theme-icon--${theme}`} />\r\n      </button>\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  onClick: PropTypes.func,\r\n  theme: PropTypes.string,\r\n};\r\n\r\nexport default Header;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Body = ({ userData }) => {\r\n  const {\r\n    avatar_url: avatarUrl,\r\n    login,\r\n    followers,\r\n    following,\r\n    html_url: profileUrl,\r\n    name,\r\n    company,\r\n    blog,\r\n    location,\r\n    bio,\r\n    public_repos: repos,\r\n    twitter_username: twitterUsername,\r\n    created_at: createdAt,\r\n  } = userData;\r\n\r\n  const formatTime = (time) => {\r\n    console.log(time);\r\n    return 'Time is in console';\r\n  };\r\n\r\n  return (\r\n    <main className=\"app-body\">\r\n      <section className=\"app-body__profile\">\r\n        <img src={avatarUrl} alt=\"user avatar\" />\r\n        <div className=\"app-body__profile__info\">\r\n          <h3>{name}</h3>\r\n          <p>\r\n            <a href={profileUrl}>{login}</a>\r\n          </p>\r\n          <p>{formatTime(createdAt)}</p>\r\n        </div>\r\n      </section>\r\n      <section className=\"app-body__bio\">{bio}</section>\r\n      <section className=\"app-body__stats\">\r\n        <div className=\"app-body__stats__repos\">\r\n          <p>Repos</p>\r\n          <p>{repos}</p>\r\n        </div>\r\n        <div className=\"app-body__stats__followers\">\r\n          <p>Followers</p>\r\n          <p>{followers}</p>\r\n        </div>\r\n        <div className=\"app-body__stats__following\">\r\n          <p>Following</p>\r\n          <p>{following}</p>\r\n        </div>\r\n      </section>\r\n      <section className=\"app-body__socials\">\r\n        <div className=\"app-body__socials__address\">\r\n          <img src=\"./assets/img/icon-location.svg\" alt=\"location icon\" />\r\n          {location && <p>{location}</p>}\r\n          {!location && <p className=\"not-available\">Not Available</p>}\r\n        </div>\r\n        <div className=\"app-body__socials__website\">\r\n          <img src=\"./assets/img/icon-website.svg\" alt=\"website icon\" />\r\n          {blog && <p>{blog}</p>}\r\n          {!blog && <p className=\"not-available\">Not Available</p>}\r\n        </div>\r\n        <div className=\"app-body__socials__twitter\">\r\n          <img src=\"./assets/img/icon-twitter.svg\" alt=\"twitter icon\" />\r\n          {twitterUsername && <p>{twitterUsername}</p>}\r\n          {!twitterUsername && <p className=\"not-available\">Not Available</p>}\r\n        </div>\r\n        <div className=\"app-body__socials__company\">\r\n          <img src=\"./assets/img/icon-company.svg\" alt=\"company icon\" />\r\n          {company && <p>{company}</p>}\r\n          {!company && <p className=\"not-available\">Not Available</p>}\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\nBody.propTypes = {\r\n  userData: PropTypes.object,\r\n};\r\n\r\nexport default Body;\r\n","import { useState } from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport Header from './Header';\r\nimport Body from './Body';\r\n\r\nfunction App() {\r\n  const [userData, setUserData] = useState(() => ({}));\r\n  const [theme, setTheme] = useState('dark-theme');\r\n\r\n  const onClick = () => {\r\n    setTheme((currentTheme) => {\r\n      if (currentTheme === 'dark-theme') {\r\n        return 'light-theme';\r\n      }\r\n      return 'dark-theme';\r\n    });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const userName = e.target.username.value;\r\n    fetch(`https://api.github.com/users/${userName}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setUserData(data))\r\n      .catch((err) => console.log(err.message));\r\n  };\r\n\r\n  return (\r\n    <div className={`app ${theme}`}>\r\n      <Header onClick={onClick} theme={theme} />\r\n      <SearchBar userData={userData} onSubmit={onSubmit} />\r\n      <Body userData={userData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}