{"version":3,"sources":["index/App/SearchBar/icon-search.svg","index/App/SearchBar.js","index/App/Header.js","index/App/Body/ProfileHead.js","index/App/Body/Bio.js","index/App/Body/Stats.js","index/App/Body/Socials/icon-location.svg","index/App/Body/Socials/icon-twitter.svg","index/App/Body/Socials/icon-website.svg","index/App/Body/Socials/icon-company.svg","index/App/Body/Socials.js","index/App/Body/userPresets.js","index/App/Body.js","index/App/users.js","index/App.js","index/App/useLocalStorageState.js","index.js"],"names":["SearchBar","onSubmit","userName","handleUserChange","className","e","width","height","src","iconSearch","alt","type","name","placeholder","value","onChange","Header","handleThemeChange","theme","onClick","monthNames","ProfileHead","userData","createdAt","created_at","avatarUrl","avatar_url","profileUrl","html_url","login","href","time","date","Date","getUTCDate","getUTCMonth","getUTCFullYear","getFormattedTime","Bio","bio","Stats","followers","following","repos","public_repos","Socials","company","blog","location","twitterUsername","twitter_username","iconLocation","iconWebsite","iconTwitter","iconCompany","userPresets","idle","rejected","pending","Body","status","copyUserPresets","JSON","parse","stringify","resolved","users","get","axios","then","res","data","App","useState","setUserData","setUserName","key","defaultValue","serialize","deserialize","valueInLocalStorage","window","localStorage","getItem","state","setState","prevKeyRef","useRef","useEffect","prevKey","current","removeItem","setItem","useLocalStorageState","setTheme","setStatus","document","body","currentTheme","preventDefault","catch","err","console","log","message","target","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.10ee7251.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-search.0cc0c984.svg\";","import PropTypes from 'prop-types';\r\nimport iconSearch from './SearchBar/icon-search.svg';\r\n\r\nconst SearchBar = ({ onSubmit, userName, handleUserChange }) => {\r\n  const handleSubmit = (e) => {\r\n    onSubmit(e);\r\n  };\r\n\r\n  return (\r\n    <form className=\"searchbar\" onSubmit={handleSubmit}>\r\n      <img width=\"20px\" height=\"20px\" src={iconSearch} alt=\"Search icon\" />\r\n      <input\r\n        className=\"searchbar__input\"\r\n        type=\"text\"\r\n        name=\"username\"\r\n        placeholder=\"Search by username\"\r\n        value={userName}\r\n        onChange={handleUserChange}\r\n      />\r\n      <input\r\n        className=\"btn btn-submit\"\r\n        type=\"submit\"\r\n        name=\"btnSubmit\"\r\n        value=\"Search\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\nSearchBar.propTypes = {\r\n  userName: PropTypes.string,\r\n  onSubmit: PropTypes.func,\r\n  handleUserChange: PropTypes.func,\r\n};\r\n\r\nexport default SearchBar;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Header = ({ handleThemeChange, theme }) => (\r\n  <header className=\"header\">\r\n    <h1>Github Scout</h1>\r\n    <button\r\n      className=\"btn btn-theme\"\r\n      type=\"button\"\r\n      onClick={handleThemeChange}\r\n      aria-label=\"change color theme\"\r\n    >\r\n      <div className={`theme-icon theme-icon--${theme}`} />\r\n    </button>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  handleThemeChange: PropTypes.func,\r\n  theme: PropTypes.string,\r\n};\r\n\r\nexport default Header;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst monthNames = [\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Sep',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec',\r\n];\r\n\r\nconst ProfileHead = ({ userData }) => {\r\n  const {\r\n    created_at: createdAt,\r\n    avatar_url: avatarUrl,\r\n    html_url: profileUrl,\r\n    login,\r\n    name,\r\n  } = userData;\r\n\r\n  const getFormattedTime = (time) => {\r\n    const date = new Date(time);\r\n    const text =\r\n      `Joined ${date.getUTCDate()} ` +\r\n      `${monthNames[date.getUTCMonth()]} ${date.getUTCFullYear()}`;\r\n\r\n    return text;\r\n  };\r\n\r\n  return (\r\n    <section className=\"app-body__profile\">\r\n      <img src={avatarUrl} width=\"80px\" height=\"80px\" alt=\"user avatar\" />\r\n      <div className=\"app-body__profile__info\">\r\n        <h1>{name}</h1>\r\n        <p>\r\n          <a href={profileUrl}>{login}</a>\r\n        </p>\r\n        <p className=\"app-body__profile__info__joined\">\r\n          {getFormattedTime(createdAt)}\r\n        </p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nProfileHead.propTypes = {\r\n  userData: PropTypes.object,\r\n};\r\n\r\nexport default ProfileHead;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Bio = ({ userData }) => {\r\n  const { bio } = userData;\r\n  return <section className=\"app-body__bio\">{bio}</section>;\r\n};\r\nBio.propTypes = {\r\n  userData: PropTypes.object,\r\n};\r\n\r\nexport default Bio;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Stats = ({ userData }) => {\r\n  const { followers, following, public_repos: repos } = userData;\r\n\r\n  return (\r\n    <section className=\"app-body__stats\">\r\n      <div className=\"app-body__stats__repos\">\r\n        <p>Repos</p>\r\n        <p>\r\n          <span className=\"accent\">{repos}</span>\r\n        </p>\r\n      </div>\r\n      <div className=\"app-body__stats__followers\">\r\n        <p>Followers</p>\r\n        <p>\r\n          <span className=\"accent\">{followers}</span>\r\n        </p>\r\n      </div>\r\n      <div className=\"app-body__stats__following\">\r\n        <p>Following</p>\r\n        <p>\r\n          <span className=\"accent\">{following}</span>\r\n        </p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nStats.propTypes = {\r\n  userData: PropTypes.object,\r\n};\r\n\r\nexport default Stats;\r\n","export default __webpack_public_path__ + \"static/media/icon-location.f11c5487.svg\";","export default __webpack_public_path__ + \"static/media/icon-twitter.f6a2a695.svg\";","export default __webpack_public_path__ + \"static/media/icon-website.b7923f6c.svg\";","export default __webpack_public_path__ + \"static/media/icon-company.6f78ffb3.svg\";","import PropTypes from 'prop-types';\r\nimport iconLocation from './Socials/icon-location.svg';\r\nimport iconTwitter from './Socials/icon-twitter.svg';\r\nimport iconWebsite from './Socials/icon-website.svg';\r\nimport iconCompany from './Socials/icon-company.svg';\r\n\r\nconst Socials = ({ userData }) => {\r\n  const {\r\n    company,\r\n    blog,\r\n    location,\r\n    twitter_username: twitterUsername,\r\n  } = userData;\r\n\r\n  return (\r\n    <section className=\"app-body__socials\">\r\n      <article className=\"app-body__socials__left\">\r\n        <div className=\"app-body__socials__location\">\r\n          <img\r\n            src={iconLocation}\r\n            width=\"14px\"\r\n            height=\"20px\"\r\n            alt=\"location icon\"\r\n          />\r\n          {location && <p>{location}</p>}\r\n          {!location && <p className=\"not-available\">Not Available</p>}\r\n        </div>\r\n        <div className=\"app-body__socials__website\">\r\n          <img\r\n            src={iconWebsite}\r\n            width=\"20px\"\r\n            height=\"20px\"\r\n            alt=\"website icon\"\r\n          />\r\n          {blog && <p>{blog}</p>}\r\n          {!blog && <p className=\"not-available\">Not Available</p>}\r\n        </div>\r\n      </article>\r\n      <article className=\"app-body__socials__right\">\r\n        <div className=\"app-body__socials__twitter\">\r\n          <img\r\n            src={iconTwitter}\r\n            width=\"20px\"\r\n            height=\"20px\"\r\n            alt=\"twitter icon\"\r\n          />\r\n          {twitterUsername && <p>{twitterUsername}</p>}\r\n          {!twitterUsername && <p className=\"not-available\">Not Available</p>}\r\n        </div>\r\n        <div className=\"app-body__socials__company\">\r\n          <img\r\n            src={iconCompany}\r\n            width=\"20px\"\r\n            height=\"20px\"\r\n            alt=\"company icon\"\r\n          />\r\n          {company && <p>{company}</p>}\r\n          {!company && <p className=\"not-available\">Not Available</p>}\r\n        </div>\r\n      </article>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Socials;\r\nSocials.propTypes = {\r\n  userData: PropTypes.object,\r\n};\r\n","const idle = {\r\n  avatar_url: 'https://avatars.githubusercontent.com/u/583231?v=4',\r\n  bio: 'lorem something is in here but i will not show o',\r\n  blog: 'https://github.blog',\r\n  company: '@github',\r\n  created_at: '2011-01-25T18:44:36Z',\r\n  followers: 4116,\r\n  following: 9,\r\n  location: 'San Francisco',\r\n  login: 'octocat',\r\n  name: 'The Octocat',\r\n  public_repos: 8,\r\n  twitter_username: null,\r\n  html_url: 'https://github.com/octocat',\r\n};\r\n\r\nconst rejected = {\r\n  avatar_url: 'https://avatars.githubusercontent.com/u/583231?v=4',\r\n  bio: 'empty',\r\n  followers: 0,\r\n  following: 0,\r\n  name: 'No such user',\r\n  public_repos: 0,\r\n  created_at: '0',\r\n};\r\n\r\nconst pending = {\r\n  avatar_url: 'https://avatars.githubusercontent.com/u/583231?v=4',\r\n  bio: 'empty',\r\n  followers: 0,\r\n  following: 0,\r\n  name: 'Loading...',\r\n  public_repos: 0,\r\n  created_at: '0',\r\n};\r\n\r\nconst userPresets = { idle, rejected, pending };\r\n\r\nexport default userPresets;\r\n","import PropTypes from 'prop-types';\r\nimport ProfileHead from './Body/ProfileHead';\r\nimport Bio from './Body/Bio';\r\nimport Stats from './Body/Stats';\r\nimport Socials from './Body/Socials';\r\nimport userPresets from './Body/userPresets';\r\n\r\nconst Body = ({ userData, status }) => {\r\n  const copyUserPresets = JSON.parse(JSON.stringify(userPresets));\r\n  copyUserPresets.resolved = { ...userData };\r\n\r\n  return (\r\n    <main className=\"app-body\">\r\n      <ProfileHead userData={copyUserPresets[status]} />\r\n      <Bio userData={copyUserPresets[status]} />\r\n      <Stats userData={copyUserPresets[status]} />\r\n      <Socials userData={copyUserPresets[status]} />\r\n    </main>\r\n  );\r\n};\r\nBody.propTypes = {\r\n  userData: PropTypes.object,\r\n  status: PropTypes.string,\r\n};\r\n\r\nexport default Body;\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = 'https://api.github.com/users';\r\n\r\nconst get = (userName) => {\r\n  const request = axios.get(`${baseUrl}/${userName}`);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst users = { get };\r\nexport default users;\r\n","import { useState, useEffect } from 'react';\r\nimport SearchBar from './App/SearchBar';\r\nimport Header from './App/Header';\r\nimport Body from './App/Body';\r\nimport users from './App/users';\r\nimport { useLocalStorageState } from './App/useLocalStorageState';\r\n\r\nfunction App() {\r\n  const [userData, setUserData] = useState(null);\r\n  const [userName, setUserName] = useState('');\r\n  const [theme, setTheme] = useLocalStorageState('theme', 'dark-theme');\r\n  const [status, setStatus] = useState('idle');\r\n\r\n  useEffect(() => {\r\n    document.body.className = theme;\r\n  }, [theme]);\r\n\r\n  const handleThemeChange = () => {\r\n    setTheme((currentTheme) => {\r\n      if (currentTheme === 'dark-theme') {\r\n        return 'light-theme';\r\n      }\r\n      return 'dark-theme';\r\n    });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setStatus('pending');\r\n\r\n    users\r\n      .get(userName)\r\n      .then((data) => {\r\n        setStatus('resolved');\r\n        return setUserData(data);\r\n      })\r\n      .catch((err) => {\r\n        setStatus('rejected');\r\n        return console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const handleUserChange = (e) => {\r\n    setUserName(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header handleThemeChange={handleThemeChange} theme={theme} />\r\n      <SearchBar\r\n        onSubmit={onSubmit}\r\n        handleUserChange={handleUserChange}\r\n        userName={userName}\r\n      />\r\n      <Body userData={userData} status={status} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useRef, useEffect } from 'react';\r\n\r\n/**\r\n *\r\n * @param {String} key The key to set in localStorage for this value\r\n * @param {Object} defaultValue The value to use if it is not already in localStorage\r\n * @param {{serialize: Function, deserialize: Function}} options The serialize and deserialize functions to use (defaults to JSON.stringify and JSON.parse respectively)\r\n */\r\n\r\nfunction useLocalStorageState(\r\n  key,\r\n  defaultValue = '',\r\n  { serialize = JSON.stringify, deserialize = JSON.parse } = {}\r\n) {\r\n  const [state, setState] = useState(() => {\r\n    const valueInLocalStorage = window.localStorage.getItem(key);\r\n    if (valueInLocalStorage) {\r\n      return deserialize(valueInLocalStorage);\r\n    }\r\n    return typeof defaultValue === 'function' ? defaultValue() : defaultValue;\r\n  });\r\n\r\n  const prevKeyRef = useRef(key);\r\n\r\n  useEffect(() => {\r\n    const prevKey = prevKeyRef.current;\r\n    if (prevKey !== key) {\r\n      window.localStorage.removeItem(prevKey);\r\n    }\r\n    prevKeyRef.current = key;\r\n    window.localStorage.setItem(key, serialize(state));\r\n  }, [key, state, serialize]);\r\n\r\n  return [state, setState];\r\n}\r\n\r\nexport { useLocalStorageState };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index/index.css';\r\nimport App from './index/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}